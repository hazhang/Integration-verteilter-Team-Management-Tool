HTTPEs wird ausschließlich HTTP 1.0 genutzt, um Übertragungsprobleme zu vermeiden.VerschlüsselungVerschlüsseln der Daten wird per XOR realisiert.Das Passwort(Schlüssel) ist auf dem FlipChart im Raum 012 zu finden.Sowie auf den oben beigefügten Bilder. Oder gleich hier: IGT2010PWWer seine Verschlüsselungsmethode mal testen möchte kann als Referenz gerne das Test-Formular auf http://141.19.143.133/form_crypt.php nutzen.--S.bickel 21:54, 6. Dez. 2010 (CET)=> Diskussion --C.oezen 15:54, 13. Dez. 2010 (CET)Startup / ShutdownBeim Startup oder Shutdown eines Agenten schickt er an alle im IP-Bereich befindlichen Server einen Http-Request mit xml Inhalt an"startup.php" bzw."shutdown.php".Parametername: request, Methode: PostBeispiel xml request<request>  <agent>    <id>someid</id>  </agent></request>Als Antwort auf den Startup-Request wird die gleiche Struktur zur Rückgabe der eigenen AgentId verwendet.Beispiel xml response<response>  <agent>    <id>someid</id>  </agent></response>DatenformatAls Kommunikationsmedium wird XML eingesetzt.Wir legen uns nicht auf eine DTD fest. Was festgelegt wird, sind Minimal-Anforderungen für jeden Datentyp. Zu jedem Datentyp können beliebige Erweiterungen hinzugefügt werden, welche hier dann veröffentlicht werden sollten, um eine Einheitlichkeit zu erreichen. (GebDat und Geburtsdatum sollten gleich heißen...)DatentypenSyntaxDie Namen der XML tags sind in Englisch auszuführen.<object-tag><value-tag><value-tag><child-tag><value-tag><tag>* --> 0 bis unbegrenzt viele dieser ElementeBeispiel <object-tag>   <value-tag>value</value-tag>   <value-tag>     <child-tag>value</child-tag>   </value-tag>   <value-tag>value</value-tag> </object-tag>für den Link Mechanismus:<object-tag>(...)<links><id>* <object-tag>   (...)   <links>     <id>agentId@ObjectId</id>     <id>agentId@ObjectId</id>   </links> </object-tag>KontaktPflichtfelder<contact> <id> <firstname> <lastname> <street> <town> <zip> <phone> <mobile> <email> <links>  <id></contact>Optionale Felder<homepage>NotizPflichtfelder:<id><title><content><links><id>*Beispiel <note>   <id>agentId@ObjectId</id>   <title>Notiztitel</title>   <content>Dies ist eine höchst informative Notiz</content>   <links>     <id>agentId@ObjectId</id>     <id>foreignAgentId@ObjectId</id>     <id>anotherAgentId@ObjectId</id>   </links> </note>AufgabePflichtfelder<id><title><content><dateStart><dateEnd><links><id>* (mehrere möglich / connectedTo (Link-Mechanismus))Beispiel <task>   <id>agentId@ObjectId</id>   <title>Notiztitel anlegen</title>   <content>Dies ist eine höchst wichtiger Task</content>   <dateStart></dateStart>   <dateEnd></dateEnd>   <links>     <id>agentId@ObjectId</id>     <id>foreignAgentId@ObjectId</id>     <id>anotherAgentId@ObjectId</id>   </links> </task>TerminPflichtfelder<appointment><id><title><description><dateStart><dateEnd><timeStart><timeEnd><links><id>* (mehrere möglich(Link-Mechanismus))ProjektPflichtfelder<id><title><description><startdate><enddate><starttime><endtime><links><id>* (mehrere möglich(Link-Mechanismus))--A.schoenhals 17:09, 2. Jan. 2011 (CET) habs mal verbessert, so wie es auf dem flipchart stand. Das gilt nicht nur für project, sondern für alle objekte die ein start und end zeitpunkt haben. --Y.demirhan 17:40, 2. Jan. 2011 (CET) d.h Aufgaben sind nicht davon betroffen, weil die nur ein DATUM haben und keine Zeitangaben. und was ich noch bemerkt habe ist, dass im Termin z.B. timeStart steht und im Project starttime, welches davon sollen wir verwenden? --P.holzinger So, hab das alte Projekt jetzt mal weggemacht, damit keiner verwirrt ist. Es ist doch jetzt am einfachsten, wenn wir nichts mehr ändern und sich alle an das halten, was jetzt hier im wiki steht. Pholzinger --O.colakIch glaube wir hatten uns in der Vorlesung auf dateStart, dateEnd, timeStart und timeEnd geeinigt, dass was oben steht wurde ohne meine Kenntnis noch einmal verändert. Ich meinte, dass es so ausschauen sollte:<id><title><description><dateStart><dateEnd><timeStart><timeEnd><links><id>* (mehrere möglich(Link-Mechanismus))PHolzinger: Sorry, dafür ist es heute nun wirklich zu spät, morgen ist das System abzugeben. Gültig sollten die Strukturen sein, die schon seit längerem hier stehen. Änderungen werden einen Tag vor Abgabe nicht mehr gemacht. --O.colakJa ich kann auch nichts dafür, dass hier das Falsche geschrieben wurde. Kann das jetzt auch nicht abändern. Schließlich ist das was darunter steht das richtige. Aber von meiner Seite aus gibt es no ProblemoIDEs wird immer die global eindeutige ID bei der Übertragung sowie innerhalb der Dokumente verwendet.Diese setzt sich bekannter weise aus Agent-ID@Objekt-ID zusammen.Filter & BindungFilter kommt bei der globalen Schnittstelle /list.php zum Einsatz.Übermittelt wird der Filter als XML Dokument im POST-Parameter: request.Bindung:UND bindet stärker als ODERBeispiel:<?xml version="1.0" encoding="utf-8" ?><request>  <filter>1.Bedingung 2.Bedingung|3.Bedingung</filter></request>d.h.Es muss 1.Bedingung und 2.Bedingung oder die 3.Bedingung erfüllt sein.Bsp.: $searchstr = "Hans Mueller"Mit einem logischem UND (Leerzeichen) wird nach einem Tag gesucht mit dem Inhalt "Hans Mueller", der umgekehrte Fall "Mueller Hans" wird dabei nicht beachtet.Bsp.: $searchstr = "Hans|Mueller"Ein logisches ODER (senkrechter Strich) sucht nach Tags die entweder "Hans" oder "Mueller" enthalten. Möchte man den umgekehrten Fall oben abdecken würde man nach "Hans Mueller|Mueller Hans" suchen.Bsp: $searchstr = "Name:Hans Mueller"Hier würde im Tag <Name> nach dem String "Hans Mueller" gesucht werdenBsp: $searchStr = "Name:Hans Mueller|Name:Karlheinz"In diesem Fall wird im Tag <Name> nach Hans Mueller oder Karlheinz gesucht. Das logische Oder hat die niedrigste Priorität.Bsp: "Kontakt:" liefert alle Kontakte eines Agenten (steht zur Diskussion).Bei einer Anfrage, die Objekte liefert (also mit Content) erhält man folgenden Response:<?xml version="1.0" encoding="utf-8" ?><response>  <obj1>.....</obj1>  <obj2>.....</obj2>  <obj3>.....</obj3></response>liefert die Anfrage keine Objekte wird eine "leere Antwort" zurückgegeben:<?xml version="1.0" encoding="utf-8" ?><response></response>Funktionen zusammengefasstIn diesem Abschnitt werden die allgemeinen Funktionen des Agenten kurz zusammengefasst. Wir gehen davon aus dass immer nur ein Objekt gelöscht, gelesen, aktualisiert oder erstellt werden soll. Nur die list Funktion liefert im Response mehrere XML Objekte (s.o.).CreateParameter: XML Daten<?xml version="1.0" encoding="utf-8" ?><request> <contact>  <id></id>  <data>ich</data> </contact></request>Rückgabewert: ID des Objekts<?xml version="1.0" encoding="utf-8"?><response> <id>MeinAgent@021465844687</id></response>DeleteParameter: ID des zu löschenden Objekts<?xml version="1.0" encoding="utf-8" ?><request> <id>MeinAgent@02146584468</id></request>Rückgabewert: Positive/Negative Ack<?xml version="1.0" encoding="utf-8" ?><response> <OK/></response>oder<?xml version="1.0" encoding="utf-8" ?><response> <NAK/></response>ReadParameter: ID des zu lesenden Objekts<?xml version="1.0" encoding="utf-8" ?><request> <id>MeinAgent@02146584468</id></request>Rückgabewert: XML String<?xml version="1.0" encoding="utf-8"?><response> <contact> .... </contact></response>UpdateParameter: Zu löschendes Objekt<?xml version="1.0" encoding="utf-8"?><request> <contact> .... </contact></request>Rückgabewert: Positive/Negative Ack<?xml version="1.0" encoding="utf-8" ?><response> <OK/></response>oder<?xml version="1.0" encoding="utf-8" ?><response> <NAK/></response>Von „https://jonathan.sv.hs-mannheim.de/mediawiki/index.php/IGT_IB_im_WS2010/2011“Diese Seite wurde zuletzt am 9. Januar 2011 um 22:14 Uhr geändert.