<?phpinclude_once("libs/tmp_literal.php");function startup($agent, $debug = 0){	$startedAgents;	$requestSet = build_request_set();		//$fps = beginRequest($requestSet);	//endReponse($requestSet, $fps);		foreach($requestSet as $key => $value){		if(!get_remote_file('http://'.$value['stream'].'/startup.php'))			echo 'connected';	}}function sendXML($remotehost, $xml_data){	// $URL = "https://www.yourwebserver.com/path/"; 	$ch = curl_init($remotehost);	curl_setopt($ch, CURLOPT_MUTE, 1);	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);	curl_setopt($ch, CURLOPT_POST, 1);	curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: text/xml'));	curl_setopt($ch, CURLOPT_POSTFIELDS, "$xml_data");	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);	$output = curl_exec($ch);	curl_close($ch);}function getXML(){}function readFileToVar($file){	$fh = fopen($file, 'r');	$theData = fread($fh, filesize($file));	fclose($fh);	return $tehData;}function build_request_set(){	$i = 1;	$requestSet;	while($i < 17){		if($i != 16)			$requestSet["IGTGruppe_".$i] = array(									'stream'	=> constant("IGTGruppe_".$i."_IP"),									'path'		=> '/startup.php',									'request'	=> '<request><agent><id>IGT_G16</id></agent></request>',									'callback'	=> 'echoArray'									);					$i++;	}	return $requestSet;}function request($stream, $path, $request) {    $fp = stream_socket_client("tcp://{$stream}:80", $errno, $errstr, 20);    if (!$fp) {        throw new Exception($errstr, $errno);    } else {        // $params = http_build_query($params);        $host = explode(':', $stream);        // $str = "GET {$path}?{$params} HTTP/1.0\r\nHost: {$host[0]}\r\nAccept: */*\r\n\r\n";		$str = "POST {$path} HTTP/1.0\r\n"."Host: {$host[0]}\r\n"."Content-type: application/x-www-form-urlencoded\r\n"							."Content-length: " . strlen($request) . "\r\n"							."Accept: */*\r\n"							."\r\n"							."$request\r\n"							."\r\n";        fwrite($fp, $str);    }    return $fp;} function response($fp) {    $r = stream_get_contents($fp);     $r = explode("\n", $r);    return json_decode($r[count($r) - 1]);}function beginRequest($requestSet) {    $fps = array();    foreach($requestSet as $key => $request) {        try {			// echo("request to host " . $request['stream'] . "\r\n");            $fps[$key] = request($request['stream'], $request['path'], $request['request']);        } catch (Exception $e) {            echo $e;        }    }    return $fps;} function endReponse($requestSet, $fps) {    $r = $fps;     while(count($fps) > 0) {        $n = stream_select($r, $w, $e, 0);        if ($n === false) {            echo $e;            continue;        }        if ($n > 0) {            foreach($r as $socket) {                $r = response($socket);                $key = array_search($socket, $fps);                $callback = $requestSet[$key]['callback'];                $callback($r);                fclose($socket);				unset($fps[$key]);			}        }        $r = $fps;    }}function echoArray($a) {    var_dump($a);}function get_remote_file($remotefile){	$opts = array(				'http' => array(							'method' => 'POST',							'header' => 'Accept-language: en\r\n',							'timeout' => 5							)				);	$context = stream_context_create($opts);		$file = file_get_contents($remotefile, false, $context);	return $file;}function shutdown($debug = 0){}function responseToClient(){	echo json_encode($_GET['agentId']);}?>